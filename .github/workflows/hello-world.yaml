name: Push Event Workflow

on:
  push:
    branches:
      - main
  # schedule:
  #   - cron: "*/5 * * * *"
  # push:
  #   paths:
  #     - "cleanup.sh"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Go
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
      - name: Build Go
        run: go build -v hello_world.go

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Test go
        run: go test hello_world_test.go hello_world.go

  cleanup:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Create a text file
        run: touch /home/runner/file.txt
      - name: List runner
        run: ls /home/runner/
      - name: cleanup
        run: chmod +x cleanup.sh && ./cleanup.sh

  Print:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Echo Variable
        run: echo "${{ vars.whoisgay }}"
      - name: Echo sniffing Variables
        run: echo ${{ vars.sniff }}
      - name: Echo Secret
        run: echo "${{ secrets.WHO_MITMASKEN }}"
  
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

  Publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: build image
        run: |
          docker build . -t zivamram/dti:latest
      - name: publish image
        run: |
          docker login -u zivamram -p ${{ secrets.DOCKER_HUB_TOKEN }}
          docker push zivamram/dti:latest
  
  Publish_to_ECR:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1    
      - name: login
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 614366605422.dkr.ecr.us-east-1.amazonaws.com
          docker build -t dti .
          docker tag dti:latest 614366605422.dkr.ecr.us-east-1.amazonaws.com/dti:latest
          docker push 614366605422.dkr.ecr.us-east-1.amazonaws.com/dti:latest

